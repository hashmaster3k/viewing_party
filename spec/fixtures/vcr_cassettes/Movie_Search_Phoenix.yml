---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_API_KEY&include_adult=false&language=en-US&page=1&query=Phoenix
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 11 Oct 2020 15:20:24 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 6cab218159221ab723900fb6fe65d73f.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - Vtq4jaZNzvOcsw10N6X-MA2f3suxoYdRnQVv48ZPSKmlVsnhxh6sIg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJ0b3RhbF9yZXN1bHRzIjoxNDEsInRvdGFsX3BhZ2VzIjo4LCJyZXN1bHRzIjpbeyJwb3B1bGFyaXR5IjoxMjcuNDA3LCJ2b3RlX2NvdW50IjozOTcyLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9jQ1RKUGVsS0dMaEFMcTNyNTFBOXVNb254S2ouanBnIiwiaWQiOjMyMDI4OCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9waHhpS0ZEdlBlUWo0QWJrdkpMbXVaRWllRFUuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRGFyayBQaG9lbml4IiwiZ2VucmVfaWRzIjpbMjgsMTIsODc4XSwidGl0bGUiOiJEYXJrIFBob2VuaXgiLCJ2b3RlX2F2ZXJhZ2UiOjYuMSwib3ZlcnZpZXciOiJUaGUgWC1NZW4gZmFjZSB0aGVpciBtb3N0IGZvcm1pZGFibGUgYW5kIHBvd2VyZnVsIGZvZSB3aGVuIG9uZSBvZiB0aGVpciBvd24sIEplYW4gR3JleSwgc3RhcnRzIHRvIHNwaXJhbCBvdXQgb2YgY29udHJvbC4gRHVyaW5nIGEgcmVzY3VlIG1pc3Npb24gaW4gb3V0ZXIgc3BhY2UsIEplYW4gaXMgbmVhcmx5IGtpbGxlZCB3aGVuIHNoZSdzIGhpdCBieSBhIG15c3RlcmlvdXMgY29zbWljIGZvcmNlLiBPbmNlIHNoZSByZXR1cm5zIGhvbWUsIHRoaXMgZm9yY2Ugbm90IG9ubHkgbWFrZXMgaGVyIGluZmluaXRlbHkgbW9yZSBwb3dlcmZ1bCwgYnV0IGZhciBtb3JlIHVuc3RhYmxlLiBUaGUgWC1NZW4gbXVzdCBub3cgYmFuZCB0b2dldGhlciB0byBzYXZlIGhlciBzb3VsIGFuZCBiYXR0bGUgYWxpZW5zIHRoYXQgd2FudCB0byB1c2UgR3JleSdzIG5ldyBhYmlsaXRpZXMgdG8gcnVsZSB0aGUgZ2FsYXh5LiIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMDYtMDUifSx7InBvcHVsYXJpdHkiOjQ4LjIxMiwidm90ZV9jb3VudCI6MjMsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL29zbzA5Z0lEMmJGazlxM0NuaThHTk91elRXWi5qcGciLCJpZCI6NzI2ODg3LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcLzdPSjJGVWxDUUtJTEVmUFpYenFLV3AzbWJVQS5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJSaXNpbmcgUGhvZW5peCIsImdlbnJlX2lkcyI6Wzk5XSwidGl0bGUiOiJSaXNpbmcgUGhvZW5peCIsInZvdGVfYXZlcmFnZSI6OC40LCJvdmVydmlldyI6IlRoZSBoaXN0b3J5IGFuZCBjdXJyZW50IHN0YW5kaW5nIG9mIHRoZSBQYXJhbHltcGljIEdhbWVzLCB3aGljaCBoYXMgZ3Jvd24gdG8gYmVjb21lIHRoZSB3b3JsZCdzIHRoaXJkIGxhcmdlc3Qgc3BvcnRpbmcgZXZlbnQuIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wOC0yNiJ9LHsicG9wdWxhcml0eSI6ODUuMDIxLCJpZCI6Njc1LCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjEzNjQ1LCJ2b3RlX2F2ZXJhZ2UiOjcuNywidGl0bGUiOiJIYXJyeSBQb3R0ZXIgYW5kIHRoZSBPcmRlciBvZiB0aGUgUGhvZW5peCIsInJlbGVhc2VfZGF0ZSI6IjIwMDctMDYtMjgiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJIYXJyeSBQb3R0ZXIgYW5kIHRoZSBPcmRlciBvZiB0aGUgUGhvZW5peCIsImdlbnJlX2lkcyI6WzEyLDE0LDk2NDhdLCJiYWNrZHJvcF9wYXRoIjoiXC9wa3hQa0hPUEpqT3Z6ZlFPY2xBTkVCVDhPZksuanBnIiwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IlJldHVybmluZyBmb3IgaGlzIGZpZnRoIHllYXIgb2Ygc3R1ZHkgYXQgSG9nd2FydHMsIEhhcnJ5IGlzIHN0dW5uZWQgdG8gZmluZCB0aGF0IGhpcyB3YXJuaW5ncyBhYm91dCB0aGUgcmV0dXJuIG9mIExvcmQgVm9sZGVtb3J0IGhhdmUgYmVlbiBpZ25vcmVkLiBMZWZ0IHdpdGggbm8gY2hvaWNlLCBIYXJyeSB0YWtlcyBtYXR0ZXJzIGludG8gaGlzIG93biBoYW5kcywgdHJhaW5pbmcgYSBzbWFsbCBncm91cCBvZiBzdHVkZW50cyDigJMgZHViYmVkICdEdW1ibGVkb3JlJ3MgQXJteScg4oCTIHRvIGRlZmVuZCB0aGVtc2VsdmVzIGFnYWluc3QgdGhlIGRhcmsgYXJ0cy4iLCJwb3N0ZXJfcGF0aCI6IlwvZzZuOEcweFBuQlZVSUtLSzQxc05tYlpCNWg0LmpwZyJ9LHsicG9wdWxhcml0eSI6OC4wNjksImlkIjoyNTQ1NzgsInZpZGVvIjpmYWxzZSwidm90ZV9jb3VudCI6MjU1LCJ2b3RlX2F2ZXJhZ2UiOjYuOCwidGl0bGUiOiJQaG9lbml4IiwicmVsZWFzZV9kYXRlIjoiMjAxNC0wOS0yNSIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZGUiLCJvcmlnaW5hbF90aXRsZSI6IlBob2VuaXgiLCJnZW5yZV9pZHMiOlsxOF0sImJhY2tkcm9wX3BhdGgiOiJcL2dGRnM1RjNuYjFDUm9XUTU3c0VBODE2YmNlMC5qcGciLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiQSBkaXNmaWd1cmVkIGNvbmNlbnRyYXRpb24tY2FtcCBzdXJ2aXZvciwgdW5yZWNvZ25pemFibGUgYWZ0ZXIgZmFjaWFsIHJlY29uc3RydWN0aW9uIHN1cmdlcnksIHNlYXJjaGVzIHJhdmFnZWQgcG9zdHdhciBCZXJsaW4gZm9yIHRoZSBodXNiYW5kIHdobyBtaWdodCBoYXZlIGJldHJheWVkIGhlciB0byB0aGUgTmF6aXMuIiwicG9zdGVyX3BhdGgiOiJcL0F1Y1Y5U3JwNGVYM0JtUExjUUx4N0F0UklRai5qcGcifSx7InBvcHVsYXJpdHkiOjkuODgsImlkIjoxNTUzNCwidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50Ijo2NSwidm90ZV9hdmVyYWdlIjo2LjcsInRpdGxlIjoiR3JpZmZpbiAmIFBob2VuaXgiLCJyZWxlYXNlX2RhdGUiOiIyMDA2LTA5LTEyIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiR3JpZmZpbiAmIFBob2VuaXgiLCJnZW5yZV9pZHMiOlszNSwxOCwxMDc0OV0sImJhY2tkcm9wX3BhdGgiOiJcL2t0Slp1cXNZZnBDaFRWdURnazlORnNoM1FLQi5qcGciLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiQSB0ZXJtaW5hbGx5IGlsbCBtYW4gZmFsbHMgaW4gbG92ZSB3aXRoIGEgd29tYW4gd2hvIGhhcyBhIHNlY3JldCB0aGF0IHRocmVhdGVucyB0aGVpciB0aW1lIHNwZW50IHRvZ2V0aGVyLiIsInBvc3Rlcl9wYXRoIjoiXC9rTDFKaDJhaFFINjJTTERFVHdEMlRwRGhsalAuanBnIn0seyJwb3B1bGFyaXR5IjoxMS4wNCwidm90ZV9jb3VudCI6MTY1LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9xMEJiam1UUFNxRjFRblp4SE5jMUdRNEpJSGMuanBnIiwiaWQiOjQ0MzMxOSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC8zUlhjNnBscW9xWFVGVHNnTWU0MUhCbWw5UHAuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUGhvZW5peCBGb3Jnb3R0ZW4iLCJnZW5yZV9pZHMiOlsyNyw5NjQ4LDg3OF0sInRpdGxlIjoiUGhvZW5peCBGb3Jnb3R0ZW4iLCJ2b3RlX2F2ZXJhZ2UiOjUuNiwib3ZlcnZpZXciOiIyMCB5ZWFycyBhZnRlciB0aHJlZSB0ZWVuYWdlcnMgZGlzYXBwZWFyZWQgaW4gdGhlIHdha2Ugb2YgbXlzdGVyaW91cyBsaWdodHMgYXBwZWFyaW5nIGFib3ZlIFBob2VuaXgsIEFyaXpvbmEsIHVuc2VlbiBmb290YWdlIGZyb20gdGhhdCBuaWdodCBoYXMgYmVlbiBkaXNjb3ZlcmVkLCBjaHJvbmljbGluZyB0aGUgZmluYWwgaG91cnMgb2YgdGhlaXIgZmF0ZWZ1bCBleHBlZGl0aW9uLiIsInJlbGVhc2VfZGF0ZSI6IjIwMTctMDQtMjEifSx7InBvcHVsYXJpdHkiOjE0LjAwMywidm90ZV9jb3VudCI6NTM4LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9wY2o2dW5Nc0tDdzBvZ1dGbFVYbWJjOWdLYXAuanBnIiwiaWQiOjExODY2LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcLzZIdzZvSUlQc2I0RVV3dUE5VnhscGZZVnFhTy5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJGbGlnaHQgb2YgdGhlIFBob2VuaXgiLCJnZW5yZV9pZHMiOlsyOCwxMiwxOCw1M10sInRpdGxlIjoiRmxpZ2h0IG9mIHRoZSBQaG9lbml4Iiwidm90ZV9hdmVyYWdlIjo1LjksIm92ZXJ2aWV3IjoiV2hlbiBhbiBvaWwgcmlnIGluIHRoZSBHb2JpIERlc2VydCBvZiBNb25nb2xpYSBwcm92ZXMgdW5wcm9kdWN0aXZlLCBhbiBhaXJjcmFmdCBjcmV3IGFyZSBzZW50IHRvIHNodXQgdGhlIG9wZXJhdGlvbiBkb3duLiBIb3dldmVyLCBvbiB0aGVpciB3YXkgdG8gQmVpamluZywgYSBtYWpvciBkdXN0IHN0b3JtIGZvcmNlcyB0aGVtIHRvIGNyYXNoIHRoZWlyIEMtMTE5IEZseWluZyBCb3hjYXIgaW4gYW4gdW5jaGFydGVkIGFyZWEgb2YgdGhlIGRlc2VydC4iLCJyZWxlYXNlX2RhdGUiOiIyMDA0LTEyLTE3In0seyJwb3B1bGFyaXR5Ijo4Ljk5MiwiaWQiOjMyMTAzOSwidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50IjozOCwidm90ZV9hdmVyYWdlIjo1LCJ0aXRsZSI6IlRoZSBQaG9lbml4IEluY2lkZW50IiwicmVsZWFzZV9kYXRlIjoiMjAxNS0wNi0xNiIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBQaG9lbml4IEluY2lkZW50IiwiZ2VucmVfaWRzIjpbMjcsNTMsODc4XSwiYmFja2Ryb3BfcGF0aCI6IlwvbmR4NUtDSlo2WDNOVjlxZzVGVno2b2JKaDgzLmpwZyIsImFkdWx0IjpmYWxzZSwib3ZlcnZpZXciOiJBIG51bWJlciBvZiAnbWlzc2luZyBwZXJzb24nIGNhc2VzIGFyZSByZXBvcnRlZCBpbiBQaG9lbml4LCBBcml6b25hIHdoZW4gYW4gdW5leHBsYWluZWQgbGlnaHQgYXBwZWFycyBpbiB0aGUgc2t5IG9uZSBuaWdodCBpbiAxOTk3LiIsInBvc3Rlcl9wYXRoIjoiXC8yRVdVZVVPNEl5aUt3bFgxNFhMVWlDUk1VTmEuanBnIn0seyJwb3B1bGFyaXR5Ijo0LjY1Niwidm90ZV9jb3VudCI6MzEsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL3RrcHBSbXg0aUJ2QWVLbG9wZk5UTzhobkt4Sy5qcGciLCJpZCI6MjgwNDcsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvN3dZWDZFclQ4eDkyWVVxcWlac2pmdGhWdWpqLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlBob2VuaXgiLCJnZW5yZV9pZHMiOls4MCwxOCw1MywxMDc0OV0sInRpdGxlIjoiUGhvZW5peCIsInZvdGVfYXZlcmFnZSI6NS4xLCJvdmVydmlldyI6IkdhbWJsaW5nIGZldmVyIC0tIGFsb25nIHdpdGggYSBicnV0YWwgYm9va2llIC0tIGxlYWRzIHRocmVlIGNyb29rZWQgY29wcyBpbnRvIGEgZG91YmxlLWRlYWxpbmcgc2NoZW1lIHRoYXQgbGFuZHMgdGhlbSBpbiBob3Qgd2F0ZXIgd2F5IG92ZXIgdGhlaXIgaGVhZHMuIiwicmVsZWFzZV9kYXRlIjoiMTk5OC0wOS0wNCJ9LHsicG9wdWxhcml0eSI6MTMuMjE4LCJ2b3RlX2NvdW50IjoxNjIsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL2lyQXRKalJQVjB3WGZEQVJNV2U2VVhXWE9sTS5qcGciLCJpZCI6MTAyNDMsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvNjFjejhkWmt5SW85bTViVnd3ZnJZY3ZWWmlLLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBGbGlnaHQgb2YgdGhlIFBob2VuaXgiLCJnZW5yZV9pZHMiOlsxMl0sInRpdGxlIjoiVGhlIEZsaWdodCBvZiB0aGUgUGhvZW5peCIsInZvdGVfYXZlcmFnZSI6Ny4yLCJvdmVydmlldyI6IkEgY2FyZ28gYWlyY3JhZnQgY3Jhc2hlcyBpbiBhIHNhbmRzdG9ybSBpbiB0aGUgU2FoYXJhIHdpdGggbGVzcyB0aGFuIGEgZG96ZW4gbWVuIG9uIGJvYXJkLiBPbmUgb2YgdGhlIHBhc3NlbmdlcnMgaXMgYW4gYWlycGxhbmUgZGVzaWduZXIgd2hvIGNvbWVzIHVwIHdpdGggdGhlIGlkZWEgb2YgcmlwcGluZyBvZmYgdGhlIHVuZGFtYWdlZCB3aW5nIGFuZCB1c2luZyBpdCBhcyB0aGUgYmFzaXMgZm9yIGEgcmVwbGFjZW1lbnQgYWlyY3JhZnQgdGhleSB3aWxsIGJ1aWxkIHRvIGVzY2FwZSBiZWZvcmUgdGhlaXIgZm9vZCBhbmQgd2F0ZXIgcnVuIG91dC4iLCJyZWxlYXNlX2RhdGUiOiIxOTY1LTEyLTE1In0seyJwb3B1bGFyaXR5Ijo0LjAyNCwidm90ZV9jb3VudCI6NywidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvMVhrZW9hWHlpUUJQYzBWRWxDczNiOFp0Nnd1LmpwZyIsImlkIjoxMDk5MjgsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvMndFazFNV0RRQTI1UGRxVWxHN09WYng4c2pULmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlBob2VuaXgiLCJnZW5yZV9pZHMiOltdLCJ0aXRsZSI6IlBob2VuaXgiLCJ2b3RlX2F2ZXJhZ2UiOjUuNywib3ZlcnZpZXciOiJJbnNwaXJlZCBieSBNaWNoZWxhbmdlbG8gQW50b25pb25pJ3MgMTk2MSBjbGFzc2ljIEwnQXZ2ZW50dXJhLCBNaWNoYWVsIEFrZXJzJyBcIlBIT0VOSVhcIiBpcyBpbmZ1c2VkIHdpdGggc3ltYm9saXNtIGFuZCBhIHNleHkgc3BhcmsuIER5bGFuIFdlbGxzIChDaGFkIEVkd2FyZCBCYXJ0bGV5KSBoYXMgYSBnb29kIGpvYiwgYSBncmVhdCBhcGFydG1lbnQgYW5kIGFuIGV4Y2l0aW5nIHJlbGF0aW9uc2hpcCB3aXRoIEtlbiBTcGFya3MgKEdhZXRhbm8gSm9uZXMsIEJveXN0b3duKSwgaGlzIHNleHkgd2VsbCB0cmF2ZWxlZCBib3lmcmllbmQgd2hvIGp1c3QgbWlnaHQgYmUgXCJ0aGUgb25lLlwiIEEgZ3JlYXQgbGlmZSwgb3Igc28gaGUgYmVsaWV2ZXMsIHVudGlsIEtlbidzIHZpc2l0IGZvciBEeWxhbidzIDIzcmQgYmlydGhkYXkgcGFydHkgaXMgdW5leHBlY3RlZGx5IGN1dCBzaG9ydCB3aGVuIEtlbiBpcyBzdWRkZW5seSBjYWxsZWQgYXdheSB0byB0ZW5kIHRvIGEgZmFpbGluZyByZWFsIGVzdGF0ZSBkZWFsLCBhbmQgdGhlbiBkaXNhcHBlYXJzLiIsInJlbGVhc2VfZGF0ZSI6IjIwMDYtMDEtMzAifSx7InBvcHVsYXJpdHkiOjYuMzIxLCJpZCI6MzEyMTMxLCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjE4LCJ2b3RlX2F2ZXJhZ2UiOjQuMiwidGl0bGUiOiJUaGUgUGhvZW5peCBQcm9qZWN0IiwicmVsZWFzZV9kYXRlIjoiMjAxNS0wMS0xNiIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBQaG9lbml4IFByb2plY3QiLCJnZW5yZV9pZHMiOls4NzgsMThdLCJiYWNrZHJvcF9wYXRoIjoiXC9lUGg1VHRiV240UUhOV3poNHdxNWdCOGI4NWUuanBnIiwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IkZvdXIgc2NpZW50aXN0cyBjcmFmdCBhIG1hY2hpbmUgdG8gcmVhbmltYXRlIGRlY2Vhc2VkIG9yZ2FuaXNtcy4iLCJwb3N0ZXJfcGF0aCI6IlwvMjNUNDR5ZjJKOE9ZQnQ0dERPYTdyMXh2N05HLmpwZyJ9LHsicG9wdWxhcml0eSI6NC4xMTYsInZvdGVfY291bnQiOjEwLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9va3hVdUlMNk9vWXhmMml4Y3VZSnY1TVFRdEYuanBnIiwiaWQiOjI2NDQwLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlBob2VuaXggdGhlIFdhcnJpb3IiLCJnZW5yZV9pZHMiOlsyOCwxNCw4NzhdLCJ0aXRsZSI6IlBob2VuaXggdGhlIFdhcnJpb3IiLCJ2b3RlX2F2ZXJhZ2UiOjMuNCwib3ZlcnZpZXciOiJCaWcgaGFpciwgYmlnIGd1bnMsIGJpZyBwZXJzb25hbGl0aWVzLCBhbmQgYSBzZXJpb3VzIGxhY2sgb2Ygd2FyZHJvYmUuIFNoZS1Xb2x2ZXMgb2YgdGhlIFdhc3RlbGFuZCwgYSBwb3N0LWFwb2NhbHlwdGljIHN0b3J5IHRoYXQgZmVhdHVyZXMgd29tZW4tLWxvdHMgYW5kIGxvdHMgb2Ygd29tZW4tLXdobyBsZWF2ZSBsaXR0bGUgdG8gdGhlIGltYWdpbmF0aW9uIGFzIHRoZXkgYmF0dGxlIGVhY2ggb3RoZXIgaW4gdmFyaW91cyBqdW5reWFyZHMgYW5kIGdyYXZlbCBwaXRzIHRvIGRldGVybWluZSB0aGUgZmF0ZSBvZiB0aGUgZW50aXJlIHdvcmxkLiIsInJlbGVhc2VfZGF0ZSI6IjE5ODgtMTAtMzEifSx7InBvcHVsYXJpdHkiOjQuMDY3LCJ2b3RlX2NvdW50IjoxLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC81NXI1RXpqcWR2VUJwRUNRenlIRlJRa2U0Q1EuanBnIiwiaWQiOjE2Njg2OCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJDb2RlIE5hbWU6IFBob2VuaXgiLCJnZW5yZV9pZHMiOltdLCJ0aXRsZSI6IkNvZGUgTmFtZTogUGhvZW5peCIsInZvdGVfYXZlcmFnZSI6NCwib3ZlcnZpZXciOiJBIEhvbmcgS29uZyBtYXJ0aWFsIGFydGlzdCBqb2lucyBmb3JjZXMgd2l0aCBhIFUuUy4gbWFyc2hhbCBpbiAyMDIwIHRvIHN0b3AgdGhlIHJlbGVhc2Ugb2YgYSB2aXJ1cyB0aGF0IGhhbHRzIHRoZSBhZ2luZyBwcm9jZXNzLiIsInJlbGVhc2VfZGF0ZSI6IjIwMDAtMDMtMDIifSx7InBvcHVsYXJpdHkiOjMuODg2LCJpZCI6NTgyMjQ2LCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjMsInZvdGVfYXZlcmFnZSI6Ni4zLCJ0aXRsZSI6IlBob2VuaXgsIE9yZWdvbiIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMDQtMTEiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJQaG9lbml4LCBPcmVnb24iLCJnZW5yZV9pZHMiOlszNV0sImJhY2tkcm9wX3BhdGgiOiJcL2haUzR4dm0yQlBtV0JTeVFCcmRKYmJSNDBvQy5qcGciLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiRGVmeWluZyB0aGUgaGF6ZSBvZiBtaWQtbGlmZSwgdHdvIGZyaWVuZHMgc2VpemUgYW4gdW5saWtlbHkgb3Bwb3J0dW5pdHkgdG8gcmVpbnZlbnQgdGhlaXIgbGl2ZXMsIHF1aXR0aW5nIHRoZWlyIGpvYnMgdG8gcmVzdG9yZSBhbiBvbGQgYm93bGluZyBhbGxleSBhbmQgc2VydmUgdGhlIFwid29ybGTigJlzIGdyZWF0ZXN0IHBpenphLlwiIiwicG9zdGVyX3BhdGgiOiJcL3dpd1VmSXdMMTBra3ZOUEx5S1lhamxFWTEzNy5qcGcifSx7InBvcHVsYXJpdHkiOjIuNzg4LCJpZCI6MjUyNzM1LCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjUsInZvdGVfYXZlcmFnZSI6NiwidGl0bGUiOiJHcmlmZmluIGFuZCBQaG9lbml4IiwicmVsZWFzZV9kYXRlIjoiMTk3Ni0wMi0yNyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkdyaWZmaW4gYW5kIFBob2VuaXgiLCJnZW5yZV9pZHMiOlsxOCwxMDc3MF0sImJhY2tkcm9wX3BhdGgiOiJcL3l4ZFB2NTFHV3dQN01Vb3k3c0pzUXpwNmkyTC5qcGciLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiR3JpZmZpbiBoYXMgYmVlbiBkaWFnbm9zZWQgd2l0aCB0ZXJtaW5hbCBjYW5jZXIuIEluc3RlYWQgb2YgcXVpZXRseSBmYWNpbmcgaGlzIGRlYXRoLCBoZSBkZWNpZGVzIHRvIGhhdmUgZnVuIGluIHRoZSB0aW1lIHJlbWFpbmluZy4gQXQgYSBjb2xsZWdlIGNsYXNzIG9uIGRlYXRoLCBoZSBtZWV0cyBQaG9lbml4LCB3aG8gaGFzIHRlcm1pbmFsIGxldWtlbWlhLiIsInBvc3Rlcl9wYXRoIjoiXC9pNzd3aExDUFIwcDF0WHBsd3N3TWFwWm1RdjcuanBnIn0seyJwb3B1bGFyaXR5IjoxLjgxMSwidm90ZV9jb3VudCI6MywidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvbEo0OEhJMWdYaEtja29BUXdtMml5dFVRQVlrLmpwZyIsImlkIjoyNjM1OCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9qTXB0RGpYR1ltS1lMbU9vVDNJR1laNlhoNUwuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJmciIsIm9yaWdpbmFsX3RpdGxlIjoiUGhvZW5peCIsImdlbnJlX2lkcyI6WzI4LDg3OF0sInRpdGxlIjoiUGhvZW5peCIsInZvdGVfYXZlcmFnZSI6NCwib3ZlcnZpZXciOiJXaGVuIGEgbWluaW5nIGNvbG9ueSBpcyB0YWtlbiBvdmVyIGJ5IGdlbmV0aWNhbGx5IGFsdGVyZWQgYW5kcm9pZHMsIGFuIGVsaXRlIGF0dGFjayB0ZWFtIGlzIHNlbnQgaW4gdG8gdGFrZSBkb3duIHRoZSBhbmRyb2lkIGxlYWRlci4iLCJyZWxlYXNlX2RhdGUiOiIxOTk1LTAxLTAxIn0seyJwb3B1bGFyaXR5IjozLjEwMywiaWQiOjIyODIzOCwidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50IjozLCJ2b3RlX2F2ZXJhZ2UiOjQuNSwidGl0bGUiOiJUaGUgUGhvZW5peCBSaXNlcyIsInJlbGVhc2VfZGF0ZSI6IjIwMTItMTItMTAiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgUGhvZW5peCBSaXNlcyIsImdlbnJlX2lkcyI6WzUzLDg3OF0sImJhY2tkcm9wX3BhdGgiOm51bGwsImFkdWx0IjpmYWxzZSwib3ZlcnZpZXciOiJXb3JsZHMgY29sbGlkZSB3aGVuIGEgdGVhbSBvZiBicmlsbGlhbnQgc2NpZW50aXN0cyBhcmUgcmVjcnVpdGVkIHRvIHdvcmsgd2l0aCBhIHNlY3JldGl2ZSBnb3Zlcm5tZW50IHJ1biBwcm9qZWN0IGNhbGxlZCB0aGUgUGhvZW5peCBQcm9ncmFtIHRvIGRldmVsb3AgY291bnRlciBtZWFzdXJlcyBmb3IgY2xpbWF0ZSBiYXNlZCB3ZWFwb25yeS4gU3BlY2lhbCBBZ2VudHMgQm9iIFNtaXRoIGFuZCBUb20gSm9uZXMgaGFuZCBwaWNrZWQgdGhlIHRlYW0gYWZ0ZXIgb2JzZXJ2aW5nIHRoZWlyIHN1Y2Nlc3Mgd2l0aCBidWlsZGluZyB0aGUgd29ybGRzIGZpcnN0IHNwYWNlIGVsZXZhdG9yIGZvciB0aGUgQm9ubmVyIFByaXplIGEgc2VjcmV0IHJlY3J1aXRtZW50IHByb2plY3QgcHVycG9zZWQgdG8gZmluZCB0aGUgd29ybGRzIGJlc3QgYW5kIGJyaWdodGVzdC4gQSBuZXdseSBmb3JtZWQgdGVycm9yaXN0IGdyb3VwIGlzIHVzaW5nIGNsaW1hdGUgYmFzZWQgd2VhcG9ucyB0byBob2xkIHRoZSBVUyBhbmQgaXRzIGFsbGllcyBob3N0YWdlLiBVc2luZyBleHRyZW1lbHkgbG93IGZyZXF1ZW5jeSBkZWxpdmVyeSBtZXRob2RzIHRoZSB0ZXJyb3Jpc3RzIGNhbiBjYXVzZSBlYXJ0aHF1YWtlcywgYWx0ZXIgcmFpbiBwYXR0ZXJucywgY2F1c2UgZHJvdWdodHMsIGFuZCBjcmVhdGUgZGVhZGx5IHN0b3JtcyBzZWVtaW5nIG91dCBvZiB0aGluIGFpcjsgYnV0IHRoZSB0ZXJyb3Jpc3QgdGhyZWF0IGlzIG5vdCB0aGUgb25seSBjaGFsbGVuZ2UgZm9yIHRoZSB0ZWFtLiBBIGRlYWRseSwgdmluZGljdGl2ZSBtZXJjZW5hcnkgZnJvbSB0aGVpciBwYXN0LCBKYW1hbCBEdWVncm8sIGhhcyBsYXVuY2hlZCBhIHJldmVuZ2Ugb3BlcmF0aW9uIHRvIHJlYWNxdWlyZSB0ZWNobm9sb2dpZXMgaGlzIGNsaWVudHMgd2FudCByZXR1cm5lZCB0byB0aGVtIGFuZCB3aWxsIHN0b3AgYXQgbm90aGluZyBpbiBvcmRlciB0byBwcm90ZWN0IGhpcyBpbnRlcmVzdHMuIiwicG9zdGVyX3BhdGgiOiJcL2FaUG5SV3h3SXZiSDl1R2h6MnIzSHljRVUwUy5qcGcifSx7InBvcHVsYXJpdHkiOjMuMTI1LCJpZCI6NTY1MDU5LCJ2aWRlbyI6dHJ1ZSwidm90ZV9jb3VudCI6NCwidm90ZV9hdmVyYWdlIjo4LjQsInRpdGxlIjoiTlhUIFRha2VPdmVyOiBQaG9lbml4IiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wMS0yNiIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Ik5YVCBUYWtlT3ZlcjogUGhvZW5peCIsImdlbnJlX2lkcyI6W10sImJhY2tkcm9wX3BhdGgiOm51bGwsImFkdWx0IjpmYWxzZSwib3ZlcnZpZXciOiJPbmUgbmlnaHQgYmVmb3JlIFJveWFsIFJ1bWJsZSAyMDE5IGNvbWVzIHRvIHRoZSBUYWxraW5nIFN0aWNrIFJlc29ydCBBcmVuYSBpbiBQaG9lbml4LCB0aGUgU3VwZXJzdGFycyBvZiBOWFQgd2lsbCB0YWtlIGNlbnRlciBzdGFnZSB3aGVuIFRha2VPdmVyOiBQaG9lbml4IGFpcnMgU2F0dXJkYXksIEphbi4gMjYuIiwicG9zdGVyX3BhdGgiOiJcL3FOa2prcEh2MmRhdm9YQklRNXFHM2E1ZmN2RC5qcGcifSx7InBvcHVsYXJpdHkiOjIuOTQ2LCJ2b3RlX2NvdW50IjoxMCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvcGNCcm8wN1U4aEFSdmNvbmNZSEpBUUd6NTBKLmpwZyIsImlkIjo0MTk4MjUsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvUUYzRW9DZlQ0ZE5KdG1jWGlPaUZROXlBTDIuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIFBob2VuaXggVGFwZXMgJzk3IiwiZ2VucmVfaWRzIjpbOTksMjcsODc4XSwidGl0bGUiOiJUaGUgUGhvZW5peCBUYXBlcyAnOTciLCJ2b3RlX2F2ZXJhZ2UiOjYuMiwib3ZlcnZpZXciOiJJbiAxOTk3LCBmb3VyIGNhbXBlcnMgd2VudCBtaXNzaW5nIGR1cmluZyB0aGUgaW5mYW1vdXMgUGhvZW5peCBMaWdodHMgaW5jaWRlbnQgYW5kIHRoZWlyIGJvZGllcyB3ZXJlIG5ldmVyIGZvdW5kLiBUaGlzIGlzIHRoZWlyIGxhc3QsIGtub3duIGZvb3RhZ2UuIFRoZSBjYW1wZXJzJyB3aGVyZWFib3V0cyBhcmUgc3RpbGwgdW5rbm93bi4iLCJyZWxlYXNlX2RhdGUiOiIyMDE2LTAxLTAxIn1dfQ==
  recorded_at: Sun, 11 Oct 2020 15:20:24 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_API_KEY&include_adult=false&language=en-US&page=2&query=Phoenix
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 11 Oct 2020 15:20:24 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ec4d04f2befcd6652834fd368a8b671e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - RmVZJk3C_S5b3wn-kqPTP9zQnM1TUk0GcpwEoPFITr6JH3OHAXFvrg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 11 Oct 2020 15:20:24 GMT
recorded_with: VCR 6.0.0
